/*! For license information please see tokens-design-tokens-stories.e5d47aa1.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkshared_ui=self.webpackChunkshared_ui||[]).push([[55],{"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./src/lib/tokens/design-tokens.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BorderRadius:()=>BorderRadius,Breakpoints:()=>Breakpoints,Colors:()=>Colors,Elevations:()=>Elevations,Grids:()=>Grids,Layouts:()=>Layouts,Spacing:()=>Spacing,Typography:()=>Typography,__namedExportsOrder:()=>__namedExportsOrder,default:()=>design_tokens_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),typedTokens={global:{colors:{primary:{50:"#E6F0ED",100:"#C0DBD4",200:"#9BC7BA",300:"#76B2A1",400:"#519E87",500:"#2C8970",600:"#1F6855",700:"#14493B",800:"#0A2B22",900:"#00110A"},secondary:{50:"#FFF2E8",100:"#FFD8BF",200:"#FFBB96",300:"#FF9C6E",400:"#FF7A45",500:"#FA541C",600:"#D4380D",700:"#AD2102",800:"#871400",900:"#610B00"},tertiary:{50:"#F9F5EF",100:"#F0E8DA"},neutral:{50:"#FAFAFA",100:"#F5F5F5",200:"#E8E8E8",300:"#D9D9D9",400:"#BFBFBF",500:"#8C8C8C",600:"#595959",700:"#434343",800:"#262626",900:"#141414"},base:{white:"#FFFFFF",black:"#000000"},informative:{50:"#E6F7FF",100:"#BAE7FF",500:"#1890FF",700:"#0050B3"},success:{50:"#F6FFED",100:"#D9F7BE",500:"#52C41A",700:"#237804"},warning:{50:"#FFFBE6",100:"#FFF1B8"},error:{50:"#FFF1F0",100:"#FFCCC7"}},elevations:{sm:{shadow1:{value:"0px 1px 2px 0px #00000008"},shadow2:{value:"0px 1px 3px 0px #0000001A"}},md:{shadow1:{value:"0px 2px 4px 0px #00000008"},shadow2:{value:"0px 4px 6px 0px #0000001A"}},lg:{shadow1:{value:"0px 4px 6px 0px #00000008"},shadow2:{value:"0px 10px 15px 0px #0000001A"}},xl:{shadow1:{value:"0px 8px 10px 0px #00000008"},shadow2:{value:"0px 20px 25px 0px #0000001A"}}},breakpoints:{mobile:"0px - 767px",tablet:"768px - 1023px",desktop:"1024px - 1440px",largeDesktop:"1441px+"},borderRadius:{none:"0px",xs:"4px",sm:"8px",md:"16px",full:"9999px"},spacing:{2:"2px",4:"4px",8:"8px",12:"12px",16:"16px",24:"24px",32:"32px",40:"40px",48:"48px",64:"64px",80:"80px"},typography:{fontFamily:"Aeonik",fontWeights:{regular:"400",medium:"500",bold:"700"},fontSizes:{"headline-xl":"48px","headline-lg":"40px","headline-md":"32px","headline-sm":"24px","title-lg":"20px","title-md":"18px","title-sm":"16px","body-lg":"16px","body-md":"14px","body-sm":"12px","label-lg":"14px","label-md":"12px","label-sm":"10px"},lineHeights:{headline:"120%",title:"130%",body:"140%",label:"150%"}}}};const design_tokens_stories={title:"Design System/Tokens",parameters:{layout:"fullscreen"}};var Colors=function Colors(){return(0,jsx_runtime.jsxs)("div",{className:"token-page",children:[(0,jsx_runtime.jsx)("h1",{children:"Color Tokens"}),[{name:"Primary",key:"primary"},{name:"Secondary",key:"secondary"},{name:"Tertiary",key:"tertiary"},{name:"Neutral",key:"neutral"},{name:"Informative",key:"informative"},{name:"Success",key:"success"},{name:"Warning",key:"warning"},{name:"Error",key:"error"},{name:"Base",key:"base"}].map((function(category){return(0,jsx_runtime.jsxs)("div",{className:"token-category",children:[(0,jsx_runtime.jsx)("h2",{children:category.name}),(0,jsx_runtime.jsx)("div",{className:"token-grid",children:Object.entries(typedTokens.global.colors[category.key]||{}).map((function(_ref){var _ref2=_slicedToArray(_ref,2),shade=_ref2[0],colorValue=_ref2[1];return(0,jsx_runtime.jsxs)("div",{className:"token-item",children:[(0,jsx_runtime.jsx)("div",{className:"color-preview",style:{backgroundColor:colorValue}}),(0,jsx_runtime.jsxs)("div",{className:"token-details",children:[(0,jsx_runtime.jsxs)("div",{className:"token-name",children:[category.key,"-",shade]}),(0,jsx_runtime.jsx)("div",{className:"token-value",children:colorValue}),(0,jsx_runtime.jsxs)("div",{className:"token-css-var",children:["--colors-",category.key,"-",shade]})]})]},shade)}))})]},category.key)}))]})},Elevations=function Elevations(){return(0,jsx_runtime.jsxs)("div",{className:"token-page",children:[(0,jsx_runtime.jsx)("h1",{children:"Elevation Tokens"}),(0,jsx_runtime.jsx)("div",{className:"token-category",children:(0,jsx_runtime.jsx)("div",{className:"elevation-grid",children:["sm","md","lg","xl"].map((function(level){return(0,jsx_runtime.jsxs)("div",{className:"elevation-item",children:[(0,jsx_runtime.jsx)("div",{className:"elevation-preview",style:{boxShadow:"".concat(typedTokens.global.elevations[level].shadow1.value,", ").concat(typedTokens.global.elevations[level].shadow2.value)},children:(0,jsx_runtime.jsx)("span",{className:"elevation-label",children:level.toUpperCase()})}),(0,jsx_runtime.jsxs)("div",{className:"token-details",children:[(0,jsx_runtime.jsxs)("div",{className:"token-name",children:["elevation-",level]}),(0,jsx_runtime.jsxs)("div",{className:"token-css-var",children:["--elevations-",level,"-shadow1, --elevations-",level,"-shadow2"]}),(0,jsx_runtime.jsxs)("div",{className:"token-value small",children:[typedTokens.global.elevations[level].shadow1.value,","," ",typedTokens.global.elevations[level].shadow2.value]})]})]},level)}))})})]})},Breakpoints=function Breakpoints(){var breakpoints=typedTokens.global.breakpoints;return(0,jsx_runtime.jsxs)("div",{className:"token-page",children:[(0,jsx_runtime.jsx)("h1",{children:"Breakpoint Tokens"}),(0,jsx_runtime.jsx)("div",{className:"token-category",children:(0,jsx_runtime.jsx)("div",{className:"breakpoint-grid",children:Object.entries(breakpoints).map((function(_ref3){var _ref4=_slicedToArray(_ref3,2),name=_ref4[0],value=_ref4[1];return(0,jsx_runtime.jsxs)("div",{className:"breakpoint-item",children:[(0,jsx_runtime.jsx)("div",{className:"breakpoint-preview",children:(0,jsx_runtime.jsx)("div",{className:"breakpoint-value",children:value})}),(0,jsx_runtime.jsxs)("div",{className:"token-details",children:[(0,jsx_runtime.jsxs)("div",{className:"token-name",children:["breakpoint-",name]}),(0,jsx_runtime.jsx)("div",{className:"token-value",children:value}),(0,jsx_runtime.jsxs)("div",{className:"token-css-var",children:["--breakpoints-",name]})]})]},name)}))})})]})},Grids=function Grids(){return(0,jsx_runtime.jsxs)("div",{className:"token-page",children:[(0,jsx_runtime.jsx)("h1",{children:"Grid System"}),Object.entries({desktop:{columns:12,gutter:"24px",margin:"32px"},tablet:{columns:8,gutter:"16px",margin:"24px"},mobile:{columns:4,gutter:"8px",margin:"16px"}}).map((function(_ref5){var _ref6=_slicedToArray(_ref5,2),name=_ref6[0],value=_ref6[1];return(0,jsx_runtime.jsxs)("div",{className:"grid-container",children:[(0,jsx_runtime.jsx)("div",{className:"grid-header",children:(0,jsx_runtime.jsxs)("h2",{children:[name.charAt(0).toUpperCase()+name.slice(1)," Grid"]})}),(0,jsx_runtime.jsx)("div",{className:"grid-preview",children:(0,jsx_runtime.jsx)("div",{className:"grid-example",style:{gridTemplateColumns:"repeat(".concat(value.columns,", 1fr)"),gap:value.gutter,margin:"0 ".concat(value.margin)},children:Array.from({length:value.columns}).map((function(_,i){return(0,jsx_runtime.jsx)("div",{className:"grid-cell",children:i+1},i)}))})}),(0,jsx_runtime.jsxs)("div",{className:"grid-info",children:[(0,jsx_runtime.jsxs)("div",{className:"grid-spec",children:[(0,jsx_runtime.jsx)("span",{className:"grid-spec-label",children:"Columns:"}),(0,jsx_runtime.jsx)("span",{className:"grid-spec-value",children:value.columns})]}),(0,jsx_runtime.jsxs)("div",{className:"grid-spec",children:[(0,jsx_runtime.jsx)("span",{className:"grid-spec-label",children:"Gutter:"}),(0,jsx_runtime.jsx)("span",{className:"grid-spec-value",children:value.gutter})]}),(0,jsx_runtime.jsxs)("div",{className:"grid-spec",children:[(0,jsx_runtime.jsx)("span",{className:"grid-spec-label",children:"Margin:"}),(0,jsx_runtime.jsx)("span",{className:"grid-spec-value",children:value.margin})]})]})]},name)}))]})},Layouts=function Layouts(){return(0,jsx_runtime.jsxs)("div",{className:"token-page",children:[(0,jsx_runtime.jsx)("h1",{children:"Layout Patterns"}),(0,jsx_runtime.jsx)("div",{className:"layout-grid",children:Object.entries({desktop:{width:"1440px",columns:12},tablet:{width:"768px",columns:8},mobile:{width:"375px",columns:4}}).map((function(_ref7){var _ref8=_slicedToArray(_ref7,2),name=_ref8[0],value=_ref8[1];return(0,jsx_runtime.jsxs)("div",{className:"layout-item",children:[(0,jsx_runtime.jsx)("div",{className:"layout-preview",children:(0,jsx_runtime.jsx)("div",{className:"layout-container",style:{maxWidth:value.width,gridTemplateColumns:"repeat(".concat(value.columns,", 1fr)")},children:Array.from({length:value.columns}).map((function(_,i){return(0,jsx_runtime.jsx)("div",{className:"layout-block",children:i+1},i)}))})}),(0,jsx_runtime.jsxs)("div",{className:"layout-info",children:[(0,jsx_runtime.jsxs)("div",{className:"layout-spec",children:[(0,jsx_runtime.jsx)("span",{className:"layout-spec-label",children:"Width:"}),(0,jsx_runtime.jsx)("span",{className:"layout-spec-value",children:value.width})]}),(0,jsx_runtime.jsxs)("div",{className:"layout-spec",children:[(0,jsx_runtime.jsx)("span",{className:"layout-spec-label",children:"Columns:"}),(0,jsx_runtime.jsx)("span",{className:"layout-spec-value",children:value.columns})]})]})]},name)}))})]})},BorderRadius=function BorderRadius(){var borderRadiusTokens=typedTokens.global.borderRadius;return(0,jsx_runtime.jsxs)("div",{className:"token-page",children:[(0,jsx_runtime.jsx)("h1",{children:"Border Radius Tokens"}),(0,jsx_runtime.jsx)("div",{className:"radius-grid",children:Object.entries(borderRadiusTokens).map((function(_ref9){var _ref10=_slicedToArray(_ref9,2),name=_ref10[0],value=_ref10[1];return(0,jsx_runtime.jsxs)("div",{className:"radius-item",children:[(0,jsx_runtime.jsx)("div",{className:"radius-preview",style:{borderRadius:value}}),(0,jsx_runtime.jsxs)("div",{className:"token-details",children:[(0,jsx_runtime.jsxs)("div",{className:"token-name",children:["radius-",name]}),(0,jsx_runtime.jsx)("div",{className:"token-value",children:value}),(0,jsx_runtime.jsxs)("div",{className:"token-css-var",children:["--border-radius-",name]})]})]},name)}))})]})},Spacing=function Spacing(){var spacingTokens=typedTokens.global.spacing;return(0,jsx_runtime.jsxs)("div",{className:"token-page",children:[(0,jsx_runtime.jsx)("h1",{children:"Spacing Tokens"}),(0,jsx_runtime.jsx)("div",{className:"spacing-grid",children:Object.entries(spacingTokens).map((function(_ref11){var _ref12=_slicedToArray(_ref11,2),name=_ref12[0],value=_ref12[1];return(0,jsx_runtime.jsxs)("div",{className:"spacing-item",children:[(0,jsx_runtime.jsx)("div",{className:"spacing-preview",children:(0,jsx_runtime.jsx)("div",{className:"spacing-box",style:{width:value,height:value}})}),(0,jsx_runtime.jsxs)("div",{className:"token-details",children:[(0,jsx_runtime.jsxs)("div",{className:"token-name",children:["spacing-",name]}),(0,jsx_runtime.jsx)("div",{className:"token-value",children:value}),(0,jsx_runtime.jsxs)("div",{className:"token-css-var",children:["--spacing-",name]})]})]},name)}))})]})},Typography=function Typography(){var typography=typedTokens.global.typography;return(0,jsx_runtime.jsxs)("div",{className:"token-page",children:[(0,jsx_runtime.jsx)("h1",{children:"Typography System"}),(0,jsx_runtime.jsxs)("div",{className:"typography-section",children:[(0,jsx_runtime.jsx)("div",{className:"typography-header",children:(0,jsx_runtime.jsx)("h2",{children:"Font Family"})}),(0,jsx_runtime.jsxs)("div",{className:"typography-item",children:[(0,jsx_runtime.jsx)("div",{className:"typography-preview",style:{fontFamily:typography.fontFamily},children:"The quick brown fox jumps over the lazy dog"}),(0,jsx_runtime.jsx)("div",{className:"typography-info",children:(0,jsx_runtime.jsxs)("div",{className:"typography-spec",children:[(0,jsx_runtime.jsx)("span",{className:"typography-spec-label",children:"Family:"}),(0,jsx_runtime.jsx)("span",{className:"typography-spec-value",children:typography.fontFamily})]})})]})]}),(0,jsx_runtime.jsxs)("div",{className:"typography-section",children:[(0,jsx_runtime.jsx)("div",{className:"typography-header",children:(0,jsx_runtime.jsx)("h2",{children:"Font Weights"})}),(0,jsx_runtime.jsx)("div",{className:"typography-grid",children:Object.entries(typography.fontWeights).map((function(_ref13){var _ref14=_slicedToArray(_ref13,2),name=_ref14[0],weight=_ref14[1];return(0,jsx_runtime.jsxs)("div",{className:"typography-item",children:[(0,jsx_runtime.jsxs)("div",{className:"typography-preview",children:[(0,jsx_runtime.jsx)("div",{className:"font-weight-preview",style:{fontWeight:weight},children:"Aa"}),(0,jsx_runtime.jsx)("div",{style:{fontWeight:weight},children:"The quick brown fox jumps over the lazy dog"})]}),(0,jsx_runtime.jsxs)("div",{className:"typography-info",children:[(0,jsx_runtime.jsxs)("div",{className:"typography-spec",children:[(0,jsx_runtime.jsx)("span",{className:"typography-spec-label",children:"Weight:"}),(0,jsx_runtime.jsx)("span",{className:"typography-spec-value",children:weight})]}),(0,jsx_runtime.jsxs)("div",{className:"typography-spec",children:[(0,jsx_runtime.jsx)("span",{className:"typography-spec-label",children:"Name:"}),(0,jsx_runtime.jsx)("span",{className:"typography-spec-value",children:name})]})]})]},name)}))})]}),(0,jsx_runtime.jsxs)("div",{className:"typography-section",children:[(0,jsx_runtime.jsx)("div",{className:"typography-header",children:(0,jsx_runtime.jsx)("h2",{children:"Font Sizes"})}),(0,jsx_runtime.jsx)("div",{className:"typography-grid",children:Object.entries(typography.fontSizes).map((function(_ref15){var _ref16=_slicedToArray(_ref15,2),name=_ref16[0],size=_ref16[1];return(0,jsx_runtime.jsxs)("div",{className:"typography-item",children:[(0,jsx_runtime.jsx)("div",{className:"typography-preview",children:(0,jsx_runtime.jsx)("div",{style:{fontSize:size},children:"The quick brown fox jumps over the lazy dog"})}),(0,jsx_runtime.jsxs)("div",{className:"typography-info",children:[(0,jsx_runtime.jsxs)("div",{className:"typography-spec",children:[(0,jsx_runtime.jsx)("span",{className:"typography-spec-label",children:"Size:"}),(0,jsx_runtime.jsx)("span",{className:"typography-spec-value",children:size})]}),(0,jsx_runtime.jsxs)("div",{className:"typography-spec",children:[(0,jsx_runtime.jsx)("span",{className:"typography-spec-label",children:"Name:"}),(0,jsx_runtime.jsx)("span",{className:"typography-spec-value",children:name})]})]})]},name)}))})]}),(0,jsx_runtime.jsxs)("div",{className:"typography-section",children:[(0,jsx_runtime.jsx)("div",{className:"typography-header",children:(0,jsx_runtime.jsx)("h2",{children:"Line Heights"})}),(0,jsx_runtime.jsx)("div",{className:"typography-grid",children:Object.entries(typography.lineHeights).map((function(_ref17){var _ref18=_slicedToArray(_ref17,2),name=_ref18[0],height=_ref18[1];return(0,jsx_runtime.jsxs)("div",{className:"typography-item",children:[(0,jsx_runtime.jsx)("div",{className:"typography-preview",children:(0,jsx_runtime.jsx)("div",{className:"line-height-preview",children:(0,jsx_runtime.jsx)("div",{className:"line-height-text",style:{lineHeight:height},children:"The quick brown fox jumps over the lazy dog. This is a multi-line text example to demonstrate different line heights in our typography system."})})}),(0,jsx_runtime.jsxs)("div",{className:"typography-info",children:[(0,jsx_runtime.jsxs)("div",{className:"typography-spec",children:[(0,jsx_runtime.jsx)("span",{className:"typography-spec-label",children:"Line Height:"}),(0,jsx_runtime.jsx)("span",{className:"typography-spec-value",children:height})]}),(0,jsx_runtime.jsxs)("div",{className:"typography-spec",children:[(0,jsx_runtime.jsx)("span",{className:"typography-spec-label",children:"Name:"}),(0,jsx_runtime.jsx)("span",{className:"typography-spec-value",children:name})]})]})]},name)}))})]})]})};Colors.parameters={...Colors.parameters,docs:{...Colors.parameters?.docs,source:{originalSource:"() => {\n  const colorCategories = [{\n    name: 'Primary',\n    key: 'primary'\n  }, {\n    name: 'Secondary',\n    key: 'secondary'\n  }, {\n    name: 'Tertiary',\n    key: 'tertiary'\n  }, {\n    name: 'Neutral',\n    key: 'neutral'\n  }, {\n    name: 'Informative',\n    key: 'informative'\n  }, {\n    name: 'Success',\n    key: 'success'\n  }, {\n    name: 'Warning',\n    key: 'warning'\n  }, {\n    name: 'Error',\n    key: 'error'\n  }, {\n    name: 'Base',\n    key: 'base'\n  }];\n  return <div className=\"token-page\">\n      <h1>Color Tokens</h1>\n      {colorCategories.map(category => <div key={category.key} className=\"token-category\">\n          <h2>{category.name}</h2>\n          <div className=\"token-grid\">\n            {Object.entries(typedTokens.global.colors[category.key] || {}).map(([shade, colorValue]) => <div key={shade} className=\"token-item\">\n                  <div className=\"color-preview\" style={{\n            backgroundColor: colorValue\n          }}></div>\n                  <div className=\"token-details\">\n                    <div className=\"token-name\">\n                      {category.key}-{shade}\n                    </div>\n                    <div className=\"token-value\">{colorValue}</div>\n                    <div className=\"token-css-var\">\n                      --colors-{category.key}-{shade}\n                    </div>\n                  </div>\n                </div>)}\n          </div>\n        </div>)}\n    </div>;\n}",...Colors.parameters?.docs?.source}}},Elevations.parameters={...Elevations.parameters,docs:{...Elevations.parameters?.docs,source:{originalSource:'() => {\n  const elevationLevels = [\'sm\', \'md\', \'lg\', \'xl\'];\n  return <div className="token-page">\n      <h1>Elevation Tokens</h1>\n      <div className="token-category">\n        <div className="elevation-grid">\n          {elevationLevels.map(level => <div key={level} className="elevation-item">\n              <div className="elevation-preview" style={{\n            boxShadow: `${typedTokens.global.elevations[level].shadow1.value}, ${typedTokens.global.elevations[level].shadow2.value}`\n          }}>\n                <span className="elevation-label">{level.toUpperCase()}</span>\n              </div>\n              <div className="token-details">\n                <div className="token-name">elevation-{level}</div>\n                <div className="token-css-var">\n                  --elevations-{level}-shadow1, --elevations-{level}-shadow2\n                </div>\n                <div className="token-value small">\n                  {typedTokens.global.elevations[level].shadow1.value},{\' \'}\n                  {typedTokens.global.elevations[level].shadow2.value}\n                </div>\n              </div>\n            </div>)}\n        </div>\n      </div>\n    </div>;\n}',...Elevations.parameters?.docs?.source}}},Breakpoints.parameters={...Breakpoints.parameters,docs:{...Breakpoints.parameters?.docs,source:{originalSource:'() => {\n  const breakpoints = typedTokens.global.breakpoints;\n  return <div className="token-page">\n      <h1>Breakpoint Tokens</h1>\n      <div className="token-category">\n        <div className="breakpoint-grid">\n          {Object.entries(breakpoints).map(([name, value]) => <div key={name} className="breakpoint-item">\n              <div className="breakpoint-preview">\n                <div className="breakpoint-value">{value}</div>\n              </div>\n              <div className="token-details">\n                <div className="token-name">breakpoint-{name}</div>\n                <div className="token-value">{value}</div>\n                <div className="token-css-var">--breakpoints-{name}</div>\n              </div>\n            </div>)}\n        </div>\n      </div>\n    </div>;\n}',...Breakpoints.parameters?.docs?.source}}},Grids.parameters={...Grids.parameters,docs:{...Grids.parameters?.docs,source:{originalSource:'() => {\n  const grids = {\n    desktop: {\n      columns: 12,\n      gutter: \'24px\',\n      margin: \'32px\'\n    },\n    tablet: {\n      columns: 8,\n      gutter: \'16px\',\n      margin: \'24px\'\n    },\n    mobile: {\n      columns: 4,\n      gutter: \'8px\',\n      margin: \'16px\'\n    }\n  };\n  return <div className="token-page">\n      <h1>Grid System</h1>\n      {Object.entries(grids).map(([name, value]) => <div key={name} className="grid-container">\n          <div className="grid-header">\n            <h2>{name.charAt(0).toUpperCase() + name.slice(1)} Grid</h2>\n          </div>\n          <div className="grid-preview">\n            <div className="grid-example" style={{\n          gridTemplateColumns: `repeat(${value.columns}, 1fr)`,\n          gap: value.gutter,\n          margin: `0 ${value.margin}`\n        }}>\n              {Array.from({\n            length: value.columns\n          }).map((_, i) => <div key={i} className="grid-cell">\n                  {i + 1}\n                </div>)}\n            </div>\n          </div>\n          <div className="grid-info">\n            <div className="grid-spec">\n              <span className="grid-spec-label">Columns:</span>\n              <span className="grid-spec-value">{value.columns}</span>\n            </div>\n            <div className="grid-spec">\n              <span className="grid-spec-label">Gutter:</span>\n              <span className="grid-spec-value">{value.gutter}</span>\n            </div>\n            <div className="grid-spec">\n              <span className="grid-spec-label">Margin:</span>\n              <span className="grid-spec-value">{value.margin}</span>\n            </div>\n          </div>\n        </div>)}\n    </div>;\n}',...Grids.parameters?.docs?.source}}},Layouts.parameters={...Layouts.parameters,docs:{...Layouts.parameters?.docs,source:{originalSource:'() => {\n  const layouts = {\n    desktop: {\n      width: \'1440px\',\n      columns: 12\n    },\n    tablet: {\n      width: \'768px\',\n      columns: 8\n    },\n    mobile: {\n      width: \'375px\',\n      columns: 4\n    }\n  };\n  return <div className="token-page">\n      <h1>Layout Patterns</h1>\n      <div className="layout-grid">\n        {Object.entries(layouts).map(([name, value]) => <div key={name} className="layout-item">\n            <div className="layout-preview">\n              <div className="layout-container" style={{\n            maxWidth: value.width,\n            gridTemplateColumns: `repeat(${value.columns}, 1fr)`\n          }}>\n                {Array.from({\n              length: value.columns\n            }).map((_, i) => <div key={i} className="layout-block">\n                    {i + 1}\n                  </div>)}\n              </div>\n            </div>\n            <div className="layout-info">\n              <div className="layout-spec">\n                <span className="layout-spec-label">Width:</span>\n                <span className="layout-spec-value">{value.width}</span>\n              </div>\n              <div className="layout-spec">\n                <span className="layout-spec-label">Columns:</span>\n                <span className="layout-spec-value">{value.columns}</span>\n              </div>\n            </div>\n          </div>)}\n      </div>\n    </div>;\n}',...Layouts.parameters?.docs?.source}}},BorderRadius.parameters={...BorderRadius.parameters,docs:{...BorderRadius.parameters?.docs,source:{originalSource:'() => {\n  const borderRadiusTokens = typedTokens.global.borderRadius;\n  return <div className="token-page">\n      <h1>Border Radius Tokens</h1>\n      <div className="radius-grid">\n        {Object.entries(borderRadiusTokens).map(([name, value]) => <div key={name} className="radius-item">\n            <div className="radius-preview" style={{\n          borderRadius: value\n        }}></div>\n            <div className="token-details">\n              <div className="token-name">radius-{name}</div>\n              <div className="token-value">{value}</div>\n              <div className="token-css-var">--border-radius-{name}</div>\n            </div>\n          </div>)}\n      </div>\n    </div>;\n}',...BorderRadius.parameters?.docs?.source}}},Spacing.parameters={...Spacing.parameters,docs:{...Spacing.parameters?.docs,source:{originalSource:'() => {\n  const spacingTokens = typedTokens.global.spacing;\n  return <div className="token-page">\n      <h1>Spacing Tokens</h1>\n      <div className="spacing-grid">\n        {Object.entries(spacingTokens).map(([name, value]) => <div key={name} className="spacing-item">\n            <div className="spacing-preview">\n              <div className="spacing-box" style={{\n            width: value,\n            height: value\n          }}></div>\n            </div>\n            <div className="token-details">\n              <div className="token-name">spacing-{name}</div>\n              <div className="token-value">{value}</div>\n              <div className="token-css-var">--spacing-{name}</div>\n            </div>\n          </div>)}\n      </div>\n    </div>;\n}',...Spacing.parameters?.docs?.source}}},Typography.parameters={...Typography.parameters,docs:{...Typography.parameters?.docs,source:{originalSource:'() => {\n  const typography = typedTokens.global.typography;\n  return <div className="token-page">\n      <h1>Typography System</h1>\n\n      {/* Font Family */}\n      <div className="typography-section">\n        <div className="typography-header">\n          <h2>Font Family</h2>\n        </div>\n        <div className="typography-item">\n          <div className="typography-preview" style={{\n          fontFamily: typography.fontFamily\n        }}>\n            The quick brown fox jumps over the lazy dog\n          </div>\n          <div className="typography-info">\n            <div className="typography-spec">\n              <span className="typography-spec-label">Family:</span>\n              <span className="typography-spec-value">\n                {typography.fontFamily}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Font Weights */}\n      <div className="typography-section">\n        <div className="typography-header">\n          <h2>Font Weights</h2>\n        </div>\n        <div className="typography-grid">\n          {Object.entries(typography.fontWeights).map(([name, weight]) => <div key={name} className="typography-item">\n              <div className="typography-preview">\n                <div className="font-weight-preview" style={{\n              fontWeight: weight\n            }}>\n                  Aa\n                </div>\n                <div style={{\n              fontWeight: weight\n            }}>\n                  The quick brown fox jumps over the lazy dog\n                </div>\n              </div>\n              <div className="typography-info">\n                <div className="typography-spec">\n                  <span className="typography-spec-label">Weight:</span>\n                  <span className="typography-spec-value">{weight}</span>\n                </div>\n                <div className="typography-spec">\n                  <span className="typography-spec-label">Name:</span>\n                  <span className="typography-spec-value">{name}</span>\n                </div>\n              </div>\n            </div>)}\n        </div>\n      </div>\n\n      {/* Font Sizes */}\n      <div className="typography-section">\n        <div className="typography-header">\n          <h2>Font Sizes</h2>\n        </div>\n        <div className="typography-grid">\n          {Object.entries(typography.fontSizes).map(([name, size]) => <div key={name} className="typography-item">\n              <div className="typography-preview">\n                <div style={{\n              fontSize: size\n            }}>\n                  The quick brown fox jumps over the lazy dog\n                </div>\n              </div>\n              <div className="typography-info">\n                <div className="typography-spec">\n                  <span className="typography-spec-label">Size:</span>\n                  <span className="typography-spec-value">{size}</span>\n                </div>\n                <div className="typography-spec">\n                  <span className="typography-spec-label">Name:</span>\n                  <span className="typography-spec-value">{name}</span>\n                </div>\n              </div>\n            </div>)}\n        </div>\n      </div>\n\n      {/* Line Heights */}\n      <div className="typography-section">\n        <div className="typography-header">\n          <h2>Line Heights</h2>\n        </div>\n        <div className="typography-grid">\n          {Object.entries(typography.lineHeights).map(([name, height]) => <div key={name} className="typography-item">\n              <div className="typography-preview">\n                <div className="line-height-preview">\n                  <div className="line-height-text" style={{\n                lineHeight: height\n              }}>\n                    The quick brown fox jumps over the lazy dog. This is a\n                    multi-line text example to demonstrate different line\n                    heights in our typography system.\n                  </div>\n                </div>\n              </div>\n              <div className="typography-info">\n                <div className="typography-spec">\n                  <span className="typography-spec-label">Line Height:</span>\n                  <span className="typography-spec-value">{height}</span>\n                </div>\n                <div className="typography-spec">\n                  <span className="typography-spec-label">Name:</span>\n                  <span className="typography-spec-value">{name}</span>\n                </div>\n              </div>\n            </div>)}\n        </div>\n      </div>\n    </div>;\n}',...Typography.parameters?.docs?.source}}};const __namedExportsOrder=["Colors","Elevations","Breakpoints","Grids","Layouts","BorderRadius","Spacing","Typography"]}}]);